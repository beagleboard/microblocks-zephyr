default:
  image: zephyrprojectrtos/zephyr-build:v0.26.13
  after_script:
    - cp ../modules/microblocks/gp/runtime/versions versions
    - xz -vc build/zephyr/zephyr.bin > microblocks.bin.xz
  artifacts:
    name: "microblocks-${CI_PIPELINE_NAME}"
    paths:
      - microblocks.bin.xz
      - versions

dev:
  stage: build
  before_script:
    - rm -rf ../.west
    - west init -l .
    - west update
    - ln -srf ../modules/lib/ArduinoCore-API/api ../modules/lib/Arduino-Zephyr-API/cores/arduino/.
    - west zephyr-export
    - pip3 install -r ../zephyr/scripts/requirements-base.txt
  script:
    - source ../zephyr/zephyr-env.sh
    - west build -b beagleconnect_freedom . -p


pilot:
  stage: build
  before_script:
    - rm -rf ../.west
    - west init -l --mf west_pilot.yml .
    - west update
    - ln -srf ../modules/lib/ArduinoCore-API/api ../modules/lib/Arduino-Zephyr-API/cores/arduino/.
    - west zephyr-export
    - pip3 install -r ../zephyr/scripts/requirements-base.txt
  script:
    - source ../zephyr/zephyr-env.sh
    - west build -b beagleconnect_freedom . -p


stable:
  stage: build
  before_script:
    - rm -rf ../.west
    - west init -l --mf west_stable.yml .
    - west update
    - ln -srf ../modules/lib/ArduinoCore-API/api ../modules/lib/Arduino-Zephyr-API/cores/arduino/.
    - west zephyr-export
    - pip3 install -r ../zephyr/scripts/requirements-base.txt
  script:
    - source ../zephyr/zephyr-env.sh
    - west build -b beagleconnect_freedom . -p


deploy:stable:
  inherit:
    default: false
  stage: deploy
  image: curlimages/curl:latest
  dependencies:
    - stable
  script:
    - VM=$(cat versions | grep VM | awk '{print $2}')
    - 'curl --fail-with-body --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file microblocks.bin.xz ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/stable/${VM}/microblocks.bin.xz'
